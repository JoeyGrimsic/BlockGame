plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

def lwjglVersion = "3.3.1"

dependencies {
    // Use the LWJGL "Bill of Materials" (BOM) to keep versions in sync
    implementation platform("org.lwjgl:lwjgl-bom:${lwjglVersion}")

    // Core LWJGL dependencies
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"

    // Natives for macOS (Intel)
    runtimeOnly "org.lwjgl:lwjgl:natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-glfw:natives-macos"
    runtimeOnly "org.lwjgl:lwjgl-opengl:natives-macos"

    // Natives for macOS (Apple Silicon)
    runtimeOnly "org.lwjgl:lwjgl:natives-macos-arm64"
    runtimeOnly "org.lwjgl:lwjgl-glfw:natives-macos-arm64"
    runtimeOnly "org.lwjgl:lwjgl-opengl:natives-macos-arm64"

    // Natives for Linux
    runtimeOnly "org.lwjgl:lwjgl:natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-glfw:natives-linux"
    runtimeOnly "org.lwjgl:lwjgl-opengl:natives-linux"

    // Optional: if you want to write tests
    testImplementation "junit:junit:4.13.2"
}

// Since you're using 'master' instead of 'main', configure Gradle to look there
sourceSets {
    main {
        java {
            srcDirs = ["src/master/java"]
        }
        resources {
            srcDirs = ["src/master/resources"]
        }
    }
}

// A run task to simplify launching the demo
tasks.register('run', JavaExec) {
    group = 'application'
    description = 'Run the LWJGL Hello Triangle program'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('com.mygame.Main')

    // On macOS (especially Apple Silicon), you may need:
    // jvmArgs = ["-XstartOnFirstThread"]
}

